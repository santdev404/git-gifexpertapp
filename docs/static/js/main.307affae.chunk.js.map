{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFecthGifs","GifExpertApp","categories","divRoot","document","querySelector","ReactDOM","render"],"mappings":"2MAIaA,EAAc,SAAC,GAAwB,IAArBC,EAAoB,EAApBA,cAAoB,EAEXC,mBAAS,IAFE,mBAExCC,EAFwC,KAE5BC,EAF4B,KAqB/C,OAGQ,sBAAMC,SAdO,SAACC,GAElBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAQd,SAGI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SA1BU,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCVlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,gDAEkCC,UAAWH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAElB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAZtB,kBAiBZM,GAjBY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIpC,OAEI,sBAAKc,UAAU,8CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECJb,SAAEA,GAAc,IAAD,EAEbd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KA0BvC,OAnBAC,qBAAW,WAEPxB,EAAQC,GACPwB,MAAM,SAAAC,GAEHC,YAAW,WACPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEf,UAKR,CAACpB,IAIIqB,EDnBwBM,CAAa3B,GAAhCa,EAHyB,EAG9BN,KAAaa,EAHiB,EAGjBA,QAGpB,OACI,qCACI,6BAAMpB,IAEJoB,GAAW,wCAEb,qBAAKJ,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAACC,GAAD,OACR,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEwBlBiB,EA1CM,WAAM,MAKa1C,mBAAS,CAAC,WALvB,mBAKhB2C,EALgB,KAKJ5C,EALI,KAYvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIJ,6BAEQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAeA,GADAA,YCxBjC8B,EAAUC,SAASC,cAAc,SAEvCC,IAASC,OAEP,cAAC,EAAD,IACAJ,K","file":"static/js/main.307affae.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n\nexport const AddCategory = ( { setCategories } ) =>{\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n\n        setInputValue(e.target.value);\n\n    }\n\n    const handleSubmit = (e) => {\n\n        e.preventDefault();\n\n        if( inputValue.trim().length > 2){\n            setCategories(cats => [inputValue, ...cats,  ]);\n            setInputValue('');\n        }\n\n    }\n\n    return (\n\n\n            <form onSubmit={ handleSubmit}>\n\n\n                <input \n                    type=\"text\"\n                    value={inputValue}\n                    onChange= {handleInputChange }\n                />\n\n                \n            </form>\n            \n\n    \n    )\n\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","export const getGifs = async(category) => {\n\n    const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=10&api_key=JoYShQfNSlMpKtitVeb38Byzgn3jMSPg`;\n    const resp = await fetch(url);\n\n    const {data} = await resp.json();\n\n    const gifs = data.map(img => {\n\n        return {\n            id:img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url\n        }\n\n    });\n\n    return gifs;\n\n\n}","import React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n\n    //console.log({id, title, url});\n\n    return (\n\n        <div className=\"card animate__animated animate__fadeInDown \">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","\nimport React from 'react'\nimport { useFecthGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\n\n\nexport const GifGrid = ({ category }) => {\n\n\n    const {data:images, loading} = useFecthGifs(category);\n\n\n    return (\n        <>\n            <h3>{ category }</h3>\n\n            { loading && <p>Loading</p>}\n\n            <div className=\"card-grid\">\n\n                { \n                    images.map( (img) => (\n                        <GifGridItem\n                        key={img.id} \n                        {...img }\n                        />\n                    ))\n                    \n                }\n\n            </div>\n  \n        </>\n    )\n}\n","import { useEffect, useState } from \"react\";\nimport {getGifs} from '../helpers/getGifs';\n\nexport const useFecthGifs = ( category ) =>{\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n\n        getGifs(category)\n        .then( imgs => {\n\n            setTimeout(()=>{\n                setState({\n                    data: imgs,\n                    loading: false\n                }); \n            },3000);\n\n\n        })\n\n    },[category]);\n\n\n\n    return state; //{data:[], loading: true}\n\n}","//import React, { Fragment } from 'react';\nimport React, { useState} from 'react';\n//import PropTypes from 'prop-types';\nimport {AddCategory} from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    //const categories = ['Samurai Chanplo', 'Vikings', 'Batman'];\n\n    \n    const [categories, setCategories] = useState(['Ragnar']);\n    /*\n    const handleAdd = () =>{\n        setCategories([...categories,'Air bender']);\n    }\n    */\n\n    return (\n        <>\n            <h1>GifExpertApp</h1>\n            <AddCategory setCategories={setCategories} />\n            <hr/>\n\n        \n        \n        <ol>\n            { \n                categories.map( category => \n                    <GifGrid \n                        key         = {category}\n                        category    = {category}\n                    />\n                )\n                \n            }\n        </ol>\n\n\n\n        </>\n    );\n    \n\n\n}\n\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp';\n\nconst divRoot = document.querySelector('#root');\n\nReactDOM.render(\n  \n  <GifExpertApp />,\n  divRoot\n\n);\n\n\n\n\n"],"sourceRoot":""}